@avatarParserSection: SECTION_END **

Now, let's update the `start-services.sh` file with the improvements you suggested:

**@avatarParserSection: FILE_TO_WRITE: /workspaces/greatsun-dev/start-services.sh **
#!/bin/bash

# Service definitions
declare -A services=(
    ["greatsun-dev"]="python main.py"
    ["credex-core"]="npm run dev"
    ["vimbiso-pay"]="python app/manage.py runserver 0.0.0.0:8000"
)

# Function to start a service
start_service() {
    local service_name=$1
    local start_command=${services[$service_name]}
    local log_file="/workspaces/greatsun-dev/central-logs/${service_name}.log"

    echo "Starting ${service_name}..."
    if [ -d "/workspaces/greatsun-dev/${service_name}" ]; then
        cd "/workspaces/greatsun-dev/${service_name}"
        eval "${start_command} > ${log_file} 2>&1 &"
    else
        echo "Warning: ${service_name} directory not found. Skipping."
    fi
}

# Function to start all services
start_services() {
    for service in "${!services[@]}"; do
        start_service "$service"
    done

    # Wait for services to start
    timeout=60
    start_time=$(date +%s)
    while true; do
        if grep -q "Starting development server" "/workspaces/greatsun-dev/central-logs/credex-core.log" && \
           grep -q "Starting development server at http://0.0.0.0:8000/" "/workspaces/greatsun-dev/central-logs/vimbiso-pay.log" && \
           grep -q "vimbiso-pay is running" "/workspaces/greatsun-dev/central-logs/greatsun-dev.log"; then
            echo "All services started successfully!"
            break
        fi

        current_time=$(date +%s)
        if [ $((current_time - start_time)) -ge $timeout ]; then
            echo "Timeout: One or more services failed to start within ${timeout} seconds."
            echo "credex-core log:"
            tail -n 20 /workspaces/greatsun-dev/central-logs/credex-core.log
            echo "vimbiso-pay log:"
            tail -n 20 /workspaces/greatsun-dev/central-logs/vimbiso-pay.log
            echo "greatsun-dev log:"
            tail -n 20 /workspaces/greatsun-dev/central-logs/greatsun-dev.log
            exit 1
        fi

        sleep 1
    done
}

# Function to stop services
stop_services() {
    for service in "${!services[@]}"; do
        echo "Stopping ${service}..."
        pkill -f "${services[$service]}"
    done
}

# Main execution
case "$1" in
    start)
        start_services
        ;;
    stop)
        stop_services
        ;;
    restart)
        stop_services
        start_services
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
        ;;
esac

# Keep the script running and tail the log files if started
if [ "$1" = "start" ] || [ "$1" = "restart" ]; then
    tail -f /workspaces/greatsun-dev/central-logs/*.log
fi